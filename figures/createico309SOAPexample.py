# Boilerplate code generated by OVITO Pro 3.7.6
import os

os.environ["OVITO_GUI_MODE"] = "1"

from ovito.io import *
from ovito.modifiers import *
from ovito.data import *
from ovito.pipeline import *
from ovito.vis import *
from ovito.qt_compat import QtCore

# Data import:
mainPipeline = import_file("ico309_Ideal.xyz")

# Visual element initialization:
data = (
    mainPipeline.compute()
)  # Evaluate new pipeline to gain access to visual elements associated with the imported data objects.
data.cell.vis.enabled = False
del data  # Done accessing input DataCollection of pipeline.
mainPipeline.add_to_scene()

# Assign color:
mainPipeline.modifiers.append(
    AssignColorModifier(
        color=[0.7490196228027344, 0.7490196228027344, 0.7490196228027344]
    )
)

# Expression selection:
mainPipeline.modifiers.append(
    ExpressionSelectionModifier(expression="ParticleIndex==195")
)

# Assign color:
mainPipeline.modifiers.append(AssignColorModifier(color=[0.0, 0.3333333432674408, 1.0]))

# Compute property:
mainPipeline.modifiers.append(
    ComputePropertyModifier(
        output_property="Selection",
        cutoff_radius=4.48023312,
        neighbor_expressions=("Selection==1",),
    )
)

# Assign color:
mainPipeline.modifiers.append(
    AssignColorModifier(color=[1.0, 0.8196078538894653, 0.13725490868091583])
)


auraPipeline = import_file("ico309_Ideal.xyz")

# Visual element initialization:
data = (
    auraPipeline.compute()
)  # Evaluate new pipeline to gain access to visual elements associated with the imported data objects.
data.cell.vis.enabled = False
del data  # Done accessing input DataCollection of pipeline.
auraPipeline.add_to_scene()

# Expression selection:
auraPipeline.modifiers.append(
    ExpressionSelectionModifier(expression="ParticleIndex==195")
)

# Assign color:
auraPipeline.modifiers.append(AssignColorModifier(color=[0.0, 0.3333333432674408, 1.0]))

# Invert selection:
auraPipeline.modifiers.append(InvertSelectionModifier())

# Delete selected:
auraPipeline.modifiers.append(DeleteSelectedModifier())

# Compute property:
auraPipeline.modifiers.append(
    ComputePropertyModifier(expressions=("4.48023312",), output_property="Radius")
)

# Compute property:
auraPipeline.modifiers.append(
    ComputePropertyModifier(expressions=("0.75",), output_property="Transparency")
)

# Viewport setup:
vp = Viewport(type=Viewport.Type.Ortho, fov=11.5908, camera_dir=(0.0, -0.0, 1.0))

# Renderer setup:
renderer = OpenGLRenderer(antialiasing_level=6)

# Rendering:
vp.render_image(filename="ico309SOAPexample.png", size=(1000, 1000), renderer=renderer)
